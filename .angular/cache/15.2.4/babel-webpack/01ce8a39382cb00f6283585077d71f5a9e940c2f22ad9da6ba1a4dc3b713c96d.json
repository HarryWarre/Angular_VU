{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../spotify.service\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistSongsComponent_div_0_li_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 10)(1, \"div\", 11)(2, \"span\", 12);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 13);\n    i0.ɵɵtext(5, \"Play\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const song_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", song_r3.name, \" : {{song.duration_ms}s}\");\n  }\n}\nfunction ArtistSongsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3);\n    i0.ɵɵelement(3, \"img\", 4);\n    i0.ɵɵelementStart(4, \"div\", 5)(5, \"h5\", 6)(6, \"strong\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(10, \"div\", 7)(11, \"ol\", 8);\n    i0.ɵɵtemplate(12, ArtistSongsComponent_div_0_li_12_Template, 6, 1, \"li\", 9);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const albumDetails_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"alt\", \"\", albumDetails_r1.name, \" cover image\");\n    i0.ɵɵproperty(\"src\", albumDetails_r1.images[0].url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(albumDetails_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Release Date: \", albumDetails_r1.release_date, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.songs);\n  }\n}\nexport class ArtistSongsComponent {\n  constructor(route, spotifyService) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.songs = [];\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.albumId = params['albumid'];\n      console.log(this.albumId);\n      if (this.albumId) {\n        this.songNames$ = this.spotifyService.getSongNames(this.albumId);\n        this.albumDetails$ = this.spotifyService.getAlbumDetails(this.albumId);\n        this.spotifyService.getAlbumSongsV2(this.albumId).subscribe(data => {\n          this.songs = data['items'];\n          console.log(this.songs);\n        });\n      }\n    });\n  }\n}\nArtistSongsComponent.ɵfac = function ArtistSongsComponent_Factory(t) {\n  return new (t || ArtistSongsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService));\n};\nArtistSongsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistSongsComponent,\n  selectors: [[\"app-artist-songs\"]],\n  decls: 2,\n  vars: 3,\n  consts: [[\"class\", \"row justify-content-center\", 4, \"ngIf\"], [1, \"row\", \"justify-content-center\"], [1, \"col-lg-4\"], [1, \"card\", \"m-3\", 2, \"max-width\", \"300px\"], [3, \"src\", \"alt\"], [1, \"card-body\"], [1, \"card-title\", \"text-center\"], [1, \"container\", \"d-flex\", \"justify-content-center\"], [1, \"list-group\", \"list-group-flush\", \"w-75\", \"mx-auto\"], [\"class\", \"list-group-item rounded text-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\", \"rounded\", \"text-center\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"text-white\", \"mr-2\"], [1, \"btn\", \"btn-success\", \"btn-sm\"]],\n  template: function ArtistSongsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ArtistSongsComponent_div_0_Template, 13, 5, \"div\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.albumDetails$));\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i3.AsyncPipe],\n  styles: [\".rounded-list[_ngcontent-%COMP%] {\\r\\n    list-style: none;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n  }\\r\\n  \\r\\n  .rounded-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\r\\n    border-radius: 10px;\\r\\n  }\\r\\n\\r\\n  .list-group-item[_ngcontent-%COMP%] {\\r\\n    background-color: #282828;\\r\\n    border-color: #282828;\\r\\n    margin-bottom: 5px;\\r\\n    \\r\\n  }\\r\\n  \\r\\n  .list-group-item[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #1db954;\\r\\n    border-color: #1db954;\\r\\n  }\\r\\n  \\r\\n  .btn-success[_ngcontent-%COMP%] {\\r\\n    background-color: #1db954;\\r\\n    border-color: #1db954;\\r\\n  }\\r\\n  \\r\\n  .btn-success[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #1ed760;\\r\\n    border-color: #1ed760;\\r\\n  }\\r\\n  \\r\\n  .rounded[_ngcontent-%COMP%] {\\r\\n    border-radius: 10px;\\r\\n    padding: 10px;\\r\\n  }\\r\\n  \\r\\n  .text-white[_ngcontent-%COMP%] {\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n    white-space: nowrap;\\r\\n    display: inline-block;\\r\\n    \\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXJ0aXN0LXNvbmdzL2FydGlzdC1zb25ncy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFVBQVU7SUFDVixTQUFTO0VBQ1g7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIscUJBQXFCO0lBQ3JCLGtCQUFrQjs7RUFFcEI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIscUJBQXFCO0VBQ3ZCOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLHFCQUFxQjtFQUN2Qjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixxQkFBcUI7RUFDdkI7O0VBRUE7SUFDRSxtQkFBbUI7SUFDbkIsYUFBYTtFQUNmOztFQUVBO0lBQ0UsZ0JBQWdCO0lBQ2hCLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIscUJBQXFCO0lBQ3JCLGdDQUFnQztFQUNsQyIsInNvdXJjZXNDb250ZW50IjpbIi5yb3VuZGVkLWxpc3Qge1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgfVxyXG4gIFxyXG4gIC5yb3VuZGVkLWxpc3QgbGkge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICB9XHJcblxyXG4gIC5saXN0LWdyb3VwLWl0ZW0ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI4MjgyODtcclxuICAgIGJvcmRlci1jb2xvcjogIzI4MjgyODtcclxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICAgIFxyXG4gIH1cclxuICBcclxuICAubGlzdC1ncm91cC1pdGVtOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxZGI5NTQ7XHJcbiAgICBib3JkZXItY29sb3I6ICMxZGI5NTQ7XHJcbiAgfVxyXG4gIFxyXG4gIC5idG4tc3VjY2VzcyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWRiOTU0O1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjMWRiOTU0O1xyXG4gIH1cclxuICBcclxuICAuYnRuLXN1Y2Nlc3M6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzFlZDc2MDtcclxuICAgIGJvcmRlci1jb2xvcjogIzFlZDc2MDtcclxuICB9XHJcbiAgXHJcbiAgLnJvdW5kZWQge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIC50ZXh0LXdoaXRlIHtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAvKiBhZGp1c3QgdGhpcyB2YWx1ZSBhcyBuZWVkZWQgKi9cclxuICB9XHJcbiAgXHJcbiAgXHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAYIA,8BAA2E;IAEzCA,YAAqC;IAAAA,iBAAO;IAC1EA,kCAAuC;IAAAA,oBAAI;IAAAA,iBAAS;;;;IADtBA,eAAqC;IAArCA,mEAAqC;;;;;IAd3EA,8BAAwF;IAGhFA,yBAAmF;IACnFA,8BAAuB;IACsBA,YAAqB;IAAAA,iBAAS;IACzEA,yBAAG;IAAAA,YAA2C;IAAAA,iBAAI;IAI5DA,+BAAqD;IAEjDA,2EAKK;IACPA,iBAAK;;;;;IAfyCA,eAAyC;IAAzCA,0EAAyC;IAA5EA,qEAAkC;IAEMA,eAAqB;IAArBA,0CAAqB;IAC7DA,eAA2C;IAA3CA,yEAA2C;IAMaA,eAAQ;IAARA,sCAAQ;;;ACF7E,OAAM,MAAOC,oBAAoB;EAM/BC,YACUC,KAAqB,EACrBC,cAA8B;IAD9B,UAAK,GAALD,KAAK;IACL,mBAAc,GAAdC,cAAc;IAJxB,UAAK,GAAS,EAAE;EAKZ;EAEJC,QAAQ;IACN,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,IAAI,CAACE,OAAO,GAAGF,MAAM,CAAC,SAAS,CAAC;MAChCG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,OAAO,CAAC;MAEzB,IAAI,IAAI,CAACA,OAAO,EAAE;QAChB,IAAI,CAACG,UAAU,GAAG,IAAI,CAACP,cAAc,CAACQ,YAAY,CAAC,IAAI,CAACJ,OAAO,CAAC;QAChE,IAAI,CAACK,aAAa,GAAG,IAAI,CAACT,cAAc,CAACU,eAAe,CAAC,IAAI,CAACN,OAAO,CAAC;QAEtE,IAAI,CAACJ,cAAc,CAACW,eAAe,CAAC,IAAI,CAACP,OAAO,CAAC,CAACD,SAAS,CACzDS,IAAI,IAAG;UACP,IAAI,CAACC,KAAK,GAAGD,IAAI,CAAC,OAAO,CAAC;UAC1BP,OAAO,CAACC,GAAG,CAAC,IAAI,CAACO,KAAK,CAAC;QACvB,CAAC,CACF;;IAEL,CAAC,CAAC;EACJ;;AA5BWhB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVjCtB,sEAAwF;;;;MAA/CA,8DAA8B","names":["i0","ArtistSongsComponent","constructor","route","spotifyService","ngOnInit","params","subscribe","albumId","console","log","songNames$","getSongNames","albumDetails$","getAlbumDetails","getAlbumSongsV2","data","songs","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\version2_assign\\src\\app\\artist-songs\\artist-songs.component.html","D:\\version2_assign\\src\\app\\artist-songs\\artist-songs.component.ts"],"sourcesContent":["<div class=\"row justify-content-center\" *ngIf=\"(albumDetails$ | async) as albumDetails\">\n    <div class=\"col-lg-4\">\n      <div class=\"card m-3\" style=\"max-width: 300px;\">\n        <img [src]=\"albumDetails.images[0].url\" alt=\"{{ albumDetails.name }} cover image\"/>\n        <div class=\"card-body\">\n          <h5 class=\"card-title text-center\"><strong>{{albumDetails.name}}</strong></h5>\n          <p>Release Date: {{albumDetails.release_date}}</p>          \n        </div>\n      </div>\n</div>\n<div class=\"container d-flex justify-content-center\">\n  <ol class=\"list-group list-group-flush w-75 mx-auto\" >\n    <li class=\"list-group-item rounded text-center\" *ngFor=\"let song of songs\">\n      <div class=\"d-flex justify-content-between align-items-center\">\n        <span class=\"text-white mr-2\">{{song.name}} : {{song.duration_ms}s}</span>               \n        <button class=\"btn btn-success btn-sm\">Play</button>\n      </div>\n    </li>\n  </ol>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { SpotifyService } from '../spotify.service';\n\n@Component({\n  selector: 'app-artist-songs',\n  templateUrl: './artist-songs.component.html',\n  styleUrls: ['./artist-songs.component.css']\n})\nexport class ArtistSongsComponent implements OnInit{\n  albumId!: string;\n  songNames$!: Observable<string[]>;\n  albumDetails$!: Observable<any>;\n  songs:any[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private spotifyService: SpotifyService\n  ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.albumId = params['albumid'];\n      console.log(this.albumId);\n  \n      if (this.albumId) {\n        this.songNames$ = this.spotifyService.getSongNames(this.albumId);\n        this.albumDetails$ = this.spotifyService.getAlbumDetails(this.albumId);\n\n        this.spotifyService.getAlbumSongsV2(this.albumId).subscribe(\n          data => {\n          this.songs = data['items'];\n          console.log(this.songs)\n          }\n        )\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}