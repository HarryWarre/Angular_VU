{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../spotify.service\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistSongsComponent_div_0_div_7_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const name_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(name_r5);\n  }\n}\nfunction ArtistSongsComponent_div_0_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"ul\");\n    i0.ɵɵtemplate(2, ArtistSongsComponent_div_0_div_7_li_2_Template, 2, 1, \"li\", 9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const songNames_r3 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", songNames_r3);\n  }\n}\nfunction ArtistSongsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3);\n    i0.ɵɵelement(3, \"img\", 4);\n    i0.ɵɵelementStart(4, \"div\", 5)(5, \"h5\", 6);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵtemplate(7, ArtistSongsComponent_div_0_div_7_Template, 3, 1, \"div\", 7);\n    i0.ɵɵpipe(8, \"async\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const albumDetails_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"alt\", \"\", albumDetails_r1.name, \" cover image\");\n    i0.ɵɵproperty(\"src\", albumDetails_r1.images[0].url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(albumDetails_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(8, 4, ctx_r0.songNames$));\n  }\n}\nexport class ArtistSongsComponent {\n  constructor(route, spotifyService) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.albumId = params['albumid'];\n      console.log(this.albumId);\n      if (this.albumId) {\n        this.songNames$ = this.spotifyService.getSongNames(this.albumId);\n        this.albumDetails$ = this.spotifyService.getAlbumDetails(this.albumId);\n      }\n    });\n  }\n}\nArtistSongsComponent.ɵfac = function ArtistSongsComponent_Factory(t) {\n  return new (t || ArtistSongsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService));\n};\nArtistSongsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistSongsComponent,\n  selectors: [[\"app-artist-songs\"]],\n  decls: 2,\n  vars: 3,\n  consts: [[\"class\", \"row\", 4, \"ngIf\"], [1, \"row\"], [1, \"col-lg-4\"], [1, \"card\"], [3, \"src\", \"alt\"], [1, \"card-body\"], [1, \"card-title\", \"text-center\"], [\"style\", \"color:aliceblue;\", 4, \"ngIf\"], [2, \"color\", \"aliceblue\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function ArtistSongsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ArtistSongsComponent_div_0_Template, 9, 6, \"div\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.albumDetails$));\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAWMA,0BAAmC;IAAAA,YAAU;IAAAA,iBAAK;;;;IAAfA,eAAU;IAAVA,6BAAU;;;;;IAFnDA,8BAAsE;IAEhEA,+EAAkD;IACpDA,iBAAK;;;;IADkBA,eAAY;IAAZA,sCAAY;;;;;IAXvCA,8BAAiE;IAGzDA,yBAAmF;IACnFA,8BAAuB;IACcA,YAAqB;IAAAA,iBAAK;IAIvEA,2EAIQ;;IAbRA,iBAAiE;;;;;IAGjBA,eAAyC;IAAzCA,0EAAyC;IAA5EA,qEAAkC;IAEFA,eAAqB;IAArBA,0CAAqB;IAI5DA,eAAyB;IAAzBA,8DAAyB;;;ACC/B,OAAM,MAAOC,oBAAoB;EAK/BC,YACUC,KAAqB,EACrBC,cAA8B;IAD9B,UAAK,GAALD,KAAK;IACL,mBAAc,GAAdC,cAAc;EACpB;EAEJC,QAAQ;IACN,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,IAAI,CAACE,OAAO,GAAGF,MAAM,CAAC,SAAS,CAAC;MAChCG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,OAAO,CAAC;MAEzB,IAAI,IAAI,CAACA,OAAO,EAAE;QAChB,IAAI,CAACG,UAAU,GAAG,IAAI,CAACP,cAAc,CAACQ,YAAY,CAAC,IAAI,CAACJ,OAAO,CAAC;QAChE,IAAI,CAACK,aAAa,GAAG,IAAI,CAACT,cAAc,CAACU,eAAe,CAAC,IAAI,CAACN,OAAO,CAAC;;IAE1E,CAAC,CAAC;EACJ;;AApBWP,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVjCnB,qEAAiE;;;;MAA/CA,8DAA8B","names":["i0","ArtistSongsComponent","constructor","route","spotifyService","ngOnInit","params","subscribe","albumId","console","log","songNames$","getSongNames","albumDetails$","getAlbumDetails","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\version2_assign\\src\\app\\artist-songs\\artist-songs.component.html","D:\\version2_assign\\src\\app\\artist-songs\\artist-songs.component.ts"],"sourcesContent":["<div class=\"row\" *ngIf=\"(albumDetails$ | async) as albumDetails\">\n    <div class=\"col-lg-4\">\n      <div class=\"card\">\n        <img [src]=\"albumDetails.images[0].url\" alt=\"{{ albumDetails.name }} cover image\"/>\n        <div class=\"card-body\">\n          <h5 class=\"card-title text-center\">{{albumDetails.name}}</h5>          \n        </div>\n      </div>\n</div>\n<div *ngIf=\"songNames$ | async as songNames\" style=\"color:aliceblue;\">\n    <ul>\n      <li *ngFor=\"let name of songNames\">{{ name }}</li>\n    </ul>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { SpotifyService } from '../spotify.service';\n\n@Component({\n  selector: 'app-artist-songs',\n  templateUrl: './artist-songs.component.html',\n  styleUrls: ['./artist-songs.component.css']\n})\nexport class ArtistSongsComponent implements OnInit{\n  albumId!: string;\n  songNames$!: Observable<string[]>;\n  albumDetails$!: Observable<any>;\n\n  constructor(\n    private route: ActivatedRoute,\n    private spotifyService: SpotifyService\n  ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.albumId = params['albumid'];\n      console.log(this.albumId);\n  \n      if (this.albumId) {\n        this.songNames$ = this.spotifyService.getSongNames(this.albumId);\n        this.albumDetails$ = this.spotifyService.getAlbumDetails(this.albumId);\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}